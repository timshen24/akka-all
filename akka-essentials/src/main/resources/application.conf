# myConfig = 42
# anotherConfig = "hello, Akka"
# aBigConfig {
#     aParticularName = "akka2"
# #     aBigConfiguration.aParticularName
#     aNestedConfiguration {
#         anotherNestedName = 56
#     }
# }

akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = INFO
}

mySpecialConfig {
    akka {
        loglevel = INFO
    }
}

# timed assertions test config
specialTimedAssertionsConfig {
    akka.test.single-expect-default = 0.3s
}

# intercepting log messages test
interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
            filter-leeway = 5s # increase timeout threshold
        }
    }
}

# routers demo
routersDemo {
    akka {
        actor.deployment {
            /poolMaster2 {
                router = round-robin-pool

            }

            /groupMaster2 {
                router = round-robin-group
                routees.paths = ["/user/slave_1", "/user/slave_2", "/user/slave_3", "/user/slave_4", "/user/slave_5"]
            }
        }
    }
}

my-dispatcher {
    type = Dispatcher #PinnedDispatcher, CallingThreadDispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
#         fixed-pool-size = 3
        fixed-pool-size = 1
    }
    throughput = 30
}

dispatcherDemo {
    akka.actor.deployment {
        /rtjvm {
            dispatcher = my-dispatcher
        }
    }
}

# mailboxes demo
mailboxesDemo {
    support-ticket-dispatcher {
        mailbox-type = "part5infra.Mailboxes$SupportTicketPriorityMailbox"
    }
    my-control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }
    akka.actor.deployment {
        /altControlAwareActor {
            mailbox = my-control-mailbox
        }
    }
}